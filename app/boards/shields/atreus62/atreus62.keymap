/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// |   ESC   |    1    |    2    |    3   |    4   |    5   |                             |    6   |    7   |    8   |    9   |    0   |  BKSP  |
// |   TAB   |    Q    |    W    |    E   |    R   |    T   |                             |    Y   |    U   |    I   |    O   |    P   |   =    |
// |  CAPS   |    A    |    S    |    D   |    F   |    G   |                             |    H   |    J   |    K   |    L   |    ;   |  ENTER |
// |  LSHFT  |    Z    |    X    |    C   |    V   |    B   |                             |    N   |    M   |    ,   |    .   |    /   |  RSHFT |
// |  CTRL   |    ~    |   LGUI  |   ALT  |    MO  |   DEL  |   | BSPACE  |   |SPACE  |   |  LEFT  |   RGHT |   UP   |   DOWN |  RALT  |   RCTL |
                        bindings = <
   &kp ESC     &kp 1      &kp 2    &kp 3    &kp 4    &kp 5                                  &kp 6    &kp 7     &kp 8    &kp 9    &kp 0      &kp BSPC
   &kp TAB     &kp Q      &kp W    &kp E    &kp R    &kp T                                  &kp Y    &kp U     &kp I    &kp O    &kp P      &kp EQUAL
   &kp CLCK    &kp A      &kp S    &kp D    &kp F    &kp G                                  &kp H    &kp J     &kp K    &kp L    &kp SEMI   &kp ENTER
   &kp LSHFT   &kp Z      &kp X    &kp C    &kp V    &kp B                                  &kp N    &kp M     &kp CMMA &kp DOT  &kp FSLH   &kp RSHFT
   &kp LCTL    &kp TILDE2 &kp LGUI &kp LALT &mo 1    &kp DEL     &kp BSPC     &kp SPACE     &kp LEFT &kp RIGHT &kp UP   &kp DOWN &kp RALT   &kp RCTL 
                        >;
                };

                lower_layer {
// -------------------------------------------------------------------------------------
// |   ESC   |    F1   |   F2    |   F3   |   F4   |   F5   |                             |   F6   |   F7   |   F8   |   F9   |   F10  |  BKSP  |
// |   TAB   |    BT1  |    BT2  |    E   |    R   |    T   |                             |    Y   |    U   |    I   |   F11  |   F12  |   DEL  |
// |  CAPS   |    A    |    S    |    D   |    F   |    G   |                             |    H   |    J   |    K   |    L   |    ;   |  ENTER |
// |  LSHFT  |    Z    |    X    |    C   |    V   |    B   |                             |    N   |    M   |    ,   |    .   |    /   |  RSHFT |
// |  CTRL   |    ~    |   LGUI  |   ALT  |    MO  |   DEL  |   | BSPACE  |   |SPACE  |   |  LEFT  |   RGHT |   UP   |   DOWN |  RALT  |   RCTL |
                        bindings = <
   &kp ESC &kp F1        &kp F2       &kp F3    &kp F4   &kp F5                              &kp F6    &kp F7     &kp F8  &kp F9  &kp F10  &kp BSPC
   &trans  &bt BT_SEL 0  &bt BT_SEL 1 &trans    &trans   &trans                              &trans    &trans     &trans  &kp F11 &kp F12  &trans
   &trans  &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans    &trans   &trans           &trans    &trans     &trans  &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -------------------------------------------------------------------------------------
// |   ESC   |        |        |        |        |        |                             |        |        |        |        |        |        |
// |         |        |        |        |        |        |                             |        |        |        |        |        |        |
// |         |        |        |        |        |        |                             |        |        |        |        |        |        |
// |         |        |        |        |        |        |                             |        |        |        |        |        |        |
// |         |        |        |        |        |        |   |         |   |       |   |        |        |        |        |        |        |
                        bindings = <
   &kp ESC &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans    &trans   &trans           &trans    &trans     &trans  &trans  &trans   &trans
                        >;
                };

                adjust_layer {
// -------------------------------------------------------------------------------------
// |   ESC   |        |        |        |        |        |                             |        |        |        |        |        |        |
// |         |        |        |        |        |        |                             |        |        |        |        |        |        |
// |         |        |        |        |        |        |                             |        |        |        |        |        |        |
// |         |        |        |        |        |        |                             |        |        |        |        |        |        |
// |         |        |        |        |        |        |   |         |   |       |   |        |        |        |        |        |        |
                        bindings = <
   &kp ESC &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans                              &trans    &trans     &trans  &trans  &trans   &trans
   &trans  &trans        &trans       &trans    &trans   &trans    &trans   &trans           &trans    &trans     &trans  &trans  &trans   &trans
                        >;
                };
        };
};
